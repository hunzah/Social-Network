{"version":3,"file":"static/js/497.9dd72c54.chunk.js","mappings":"oRACA,EAA0B,yBAA1B,EAAiE,6BAAjE,EAAuG,wBAAvG,EAAwI,wBAAxI,EAA2K,0BAA3K,EAA+M,yB,mBCMlMA,EAAU,SAACC,GACpB,OACI,0BACI,gBAAKC,UAAWC,EAAhB,SAA4BF,EAAMG,U,UCFjCC,EAAS,SAACJ,GACnB,OACI,gBAAKC,UAAS,UAAKC,EAAL,YAAiBA,GAA/B,UAA2C,SAAC,KAAD,CAASG,GAAE,iBAAYL,EAAMM,MAA7B,SAAsCN,EAAMO,U,oBCUlFC,EAAU,SAACR,GAKpB,OACI,iBAAKC,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SACKF,EAAMS,aAAaC,WAAWC,KAAI,SAACC,EAAMC,GACtC,OAAO,SAACT,EAAD,CAAiBE,KAAMM,EAAKN,KAAMC,KAAMK,EAAKL,MAAhCM,SAG5B,iBAAKZ,UAAWC,EAAhB,UACKF,EAAMS,aAAaK,WAAWH,KAAI,SAACC,EAAMC,GACtC,OAAO,SAACd,EAAD,CAAkBI,KAAMS,EAAKG,SAAfF,OAEzB,SAACG,EAAD,CAAqBC,SAfX,SAACC,GACnBlB,EAAMmB,kBAAkBD,EAAOE,0BAkCjCJ,GAAsBK,EAAAA,EAAAA,GAAsB,CAC9CC,KAAM,kBADkBD,EAfL,SAACrB,IACHuB,EAAAA,EAAAA,IAAU,IAC3B,OACI,kBAAMN,SAAUjB,EAAMwB,aAAtB,WACI,SAACC,EAAA,EAAD,CACIC,UAAWC,EAAAA,EACXC,SAAU,CAACC,EAAAA,IACXtB,KAAK,iBACLuB,YAAY,wBAEhB,mBAAQ7B,UAAW8B,EAAAA,EAAAA,OAAUC,KAAK,SAAlC,wB,8BCpBCC,EAAb,0IACI,WACI,OACI,SAACzB,EAAD,CAASC,aAAcyB,KAAKlC,MAAMS,aACzBU,kBAAmBe,KAAKlC,MAAMmB,wBAJnD,GAAsCgB,EAAAA,WAWtC,GAAeC,EAAAA,EAAAA,IACXC,EAAAA,GACAC,EAAAA,EAAAA,KA5BoB,SAACC,GACrB,MAAO,CACH9B,aAAc8B,EAAM9B,iBAID,SAAC+B,GACxB,MAAQ,CACArB,kBAAmB,SAACsB,GAChBD,GAASE,EAAAA,EAAAA,GAAcD,SAiBvC,CAGER","sources":["webpack://samurai-way/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/Message/Message.tsx","components/Dialogs/DialogItem/Dialog.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__WuXkw\",\"dialogsItem\":\"Dialogs_dialogsItem__VtjSL\",\"dialog\":\"Dialogs_dialog__HKeos\",\"active\":\"Dialogs_active__hSN2K\",\"messages\":\"Dialogs_messages__2QGQL\",\"message\":\"Dialogs_message__wyKvo\"};","import s from '../Dialogs.module.css'\r\n\r\ntype MessagesPropsType = {\r\n    text: string\r\n}\r\n\r\n\r\nexport const Message = (props: MessagesPropsType) => {\r\n    return (\r\n        <div>\r\n            <div className={s.message}>{props.text}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import s from '../Dialogs.module.css'\r\nimport {NavLink} from 'react-router-dom';\r\n\r\ntype DialogPropsType = {\r\n    path: string\r\n    name: string\r\n}\r\n\r\nexport const Dialog = (props: DialogPropsType) => {\r\n    return (\r\n        <div className={`${s.dialog} ${s.active}`}><NavLink to={`/dialog${props.path}`}>{props.name}</NavLink></div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {Field, InjectedFormProps, reduxForm} from 'redux-form';\r\nimport s from './Dialogs.module.css';\r\n// @ts-ignore\r\nimport b from './../../common/components/button.module.scss';\r\nimport {Message} from './Message/Message';\r\nimport {Dialog} from './DialogItem/Dialog';\r\nimport {MessagesPageType} from '../redux/store';\r\nimport {TextArea} from '../common/FormsControls/FormsControls';\r\nimport {maxLength, required} from '../../utilits/validators';\r\n\r\ntype FormValues = {\r\n    newMessageBody: string;\r\n};\r\n\r\ntype DialogsPropsType = {\r\n    AddMessageHandler: (value: string) => void;\r\n    messagesPage: MessagesPageType;\r\n};\r\n\r\nexport const Dialogs = (props: DialogsPropsType) => {\r\n    const addNewMessage = (values: FormValues) => {\r\n        props.AddMessageHandler(values.newMessageBody);\r\n    };\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItem}>\r\n                {props.messagesPage.dialogsArr.map((item, id) => {\r\n                    return <Dialog key={id} path={item.path} name={item.name}/>;\r\n                })}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {props.messagesPage.messageArr.map((item, id) => {\r\n                    return <Message key={id} text={item.message}/>;\r\n                })}\r\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nconst AddMessageForm = (props: InjectedFormProps<FormValues>) => {\r\n    const length15 = maxLength(15)\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field\r\n                component={TextArea}\r\n                validate={[required]}\r\n                name=\"newMessageBody\"\r\n                placeholder=\"enter your message\"\r\n            />\r\n            <button className={b.button} type=\"submit\">Send</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm<FormValues>({\r\n    form: 'addMessageForm',\r\n})(AddMessageForm);","import React from 'react';\r\nimport {MessageSendAC} from '../redux/messages-reducer';\r\nimport {Dialogs} from './Dialogs';\r\nimport {connect} from 'react-redux';\r\nimport {AppReduxStateType, DispatchType} from '../redux/redux-store';\r\nimport {withAuthRedirect} from '../../hoc/WithAuthRedirect';\r\nimport {compose} from 'redux';\r\n\r\ntype MapStateToPropsType = {\r\n    messagesPage: any\r\n}\r\ntype MapDispatchToPropsType = {\r\n    AddMessageHandler: (value: any) => void\r\n}\r\ntype PropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nconst mapStateToProps = (state: AppReduxStateType): MapStateToPropsType => {\r\n    return {\r\n        messagesPage: state.messagesPage\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: DispatchType): MapDispatchToPropsType => {\r\n    return ({\r\n            AddMessageHandler: (value: any) => {\r\n                dispatch(MessageSendAC(value));\r\n            }\r\n        }\r\n    )\r\n}\r\n\r\nexport class DialogsContainer extends React.Component<PropsType> {\r\n    render() {\r\n        return (\r\n            <Dialogs messagesPage={this.props.messagesPage}\r\n                     AddMessageHandler={this.props.AddMessageHandler}/>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n)(DialogsContainer) as React.ComponentType\r\n\r\n\r\n"],"names":["Message","props","className","s","text","Dialog","to","path","name","Dialogs","messagesPage","dialogsArr","map","item","id","messageArr","message","AddMessageFormRedux","onSubmit","values","AddMessageHandler","newMessageBody","reduxForm","form","maxLength","handleSubmit","Field","component","TextArea","validate","required","placeholder","b","type","DialogsContainer","this","React","compose","withAuthRedirect","connect","state","dispatch","value","MessageSendAC"],"sourceRoot":""}
{"version":3,"file":"static/js/848.50505197.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/components/common/paginator/paginator.module.css?6840","components/common/paginator/paginator.tsx","webpack://samurai-way/./src/components/Users/users.module.css?9211","components/Users/User/Users.tsx","components/Users/Users.tsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","components/redux/users-selectors.ts","components/Users/UsersContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"selectedPage\":\"paginator_selectedPage__STqAL\"};","import s from './paginator.module.css';\r\nimport React, { useState } from 'react';\r\n\r\ntype PropsType = {\r\n    onPageChanged: (p: number) => void;\r\n    totalItemsCount: number;\r\n    pageSize: number;\r\n    currentPage: number;\r\n    portionSize?: number;\r\n};\r\n\r\nexport const Paginator = (props: PropsType) => {\r\n    const {\r\n        onPageChanged,\r\n        totalItemsCount,\r\n        pageSize,\r\n        currentPage,\r\n        portionSize = 10,\r\n    } = props;\r\n\r\n\r\n    const pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    const pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n\r\n    const portionCount = Math.ceil(pagesCount / portionSize);\r\n\r\n    const [portionNumber, setPortionNumber] = useState<number>(1);\r\n\r\n    const leftPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    const rightPageNumber = Math.min(portionNumber * portionSize, pagesCount);\r\n\r\n    const prevDisabled = portionNumber === 1;\r\n\r\n    const nextDisabled = portionNumber === portionCount;\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={() => setPortionNumber(portionNumber - 1)} disabled={prevDisabled}>\r\n                prev\r\n            </button>\r\n\r\n\r\n            {pages\r\n                .filter((p) => p >= leftPageNumber && p <= rightPageNumber)\r\n                .map((p) => (\r\n                    <span\r\n                        key={p}\r\n                        className={currentPage === p ? s.selectedPage : ''}\r\n                        onClick={() => {\r\n                            const portionNumber = Math.ceil(p / portionSize);\r\n                            setPortionNumber(portionNumber);\r\n                            onPageChanged(p);\r\n                        }}\r\n                    >\r\n            {p}\r\n          </span>\r\n                ))}\r\n\r\n            <button onClick={() => setPortionNumber(portionNumber + 1)} disabled={nextDisabled}>\r\n                next\r\n            </button>\r\n        </div>\r\n    );\r\n};","// extracted by mini-css-extract-plugin\nexport default {\"avatar\":\"users_avatar__GBbqG\"};","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport defaultPhoto from '../../../assets/img/default avatar.png';\r\nimport s from '../users.module.css';\r\nimport {UsersArrType} from '../../redux/users-reducer';\r\n\r\ntype PropsType = {\r\n    user: UsersArrType\r\n    followThunk: (userId: number) => void\r\n    unFollowThunk: (userId: number) => void\r\n    followingInProgress: number[]\r\n}\r\nexport const User = (props: PropsType) => {\r\n    const {user, followThunk, unFollowThunk, followingInProgress} = props\r\n    return <div key={user.id}>\r\n        <NavLink to={'/profile/' + user.id}>\r\n            <img alt={'profile'} src={user.photos.small !== null ? user.photos.small : defaultPhoto}\r\n                 className={s.avatar}\r\n            /></NavLink>\r\n        {user.followed ?\r\n            <button onClick={() => {\r\n                followThunk(user.id)\r\n            }}\r\n                    disabled={followingInProgress.some(id => id === user.id)}\r\n\r\n            >unfollow</button>\r\n            :\r\n            <button onClick={() => {\r\n                unFollowThunk(user.id)\r\n            }}\r\n                    disabled={followingInProgress.some(id => id === user.id)}\r\n            >follow</button>\r\n        }\r\n        <div>{user.name}</div>\r\n        <div>{user.city}</div>\r\n    </div>\r\n\r\n};\r\n","import React from 'react';\r\nimport {UsersArrType} from '../redux/users-reducer';\r\nimport {Paginator} from '../common/paginator/paginator';\r\nimport {User} from './User/Users';\r\n\r\ntype PropsType = {\r\n    users: UsersArrType[]\r\n    onPageChanged: (p: number) => void\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    followThunk: (userId: number) => void\r\n    unFollowThunk: (userId: number) => void\r\n    followingInProgress: number[]\r\n}\r\n\r\nexport const Users = (props: PropsType) => {\r\n\r\n    return <div>\r\n        <Paginator currentPage={props.currentPage} onPageChanged={props.onPageChanged}\r\n                   totalItemsCount={props.totalUsersCount} pageSize={props.pageSize}/>\r\n        {props.users.map(u => <User key={u.id} user={u} followThunk={props.followThunk}\r\n                                    unFollowThunk={props.unFollowThunk}\r\n                                    followingInProgress={props.followingInProgress}/>\r\n        )}\r\n    </div>\r\n}\r\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import {AppReduxStateType} from './redux-store';\r\nimport {createSelector} from 'reselect';\r\n\r\nexport const getUsers = (state: AppReduxStateType) => {\r\n    return state.usersPage.usersArr\r\n}\r\nexport const getUsersSelector = createSelector(getUsers, (users) => () => {\r\n    return users\r\n})\r\n\r\n\r\nexport const getPageSize = (state: AppReduxStateType) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getCurrentPage = (state: AppReduxStateType) => {\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getTotalUsersCount = (state: AppReduxStateType) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const getFollowingInProgress = (state: AppReduxStateType) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\nexport const getIsFetching = (state: AppReduxStateType) => {\r\n    return state.usersPage.isFetching\r\n}","import React from 'react';\r\nimport {AppReduxStateType} from '../redux/redux-store';\r\nimport {\r\n    followThunkCreator,\r\n    getUsersThunkCreator,\r\n    SetCurrentPageAC,\r\n    SetFetchingAC,\r\n    SetTotalUsersCountAC,\r\n    SetUsersAC,\r\n    unFollowThunkCreator,\r\n    UsersArrType\r\n} from '../redux/users-reducer';\r\nimport {connect} from 'react-redux';\r\nimport {Users} from './Users';\r\nimport {Preloader} from '../common/Preloader/Preloader';\r\nimport {withAuthRedirect} from '../../hoc/WithAuthRedirect';\r\nimport {compose} from 'redux';\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from '../redux/users-selectors';\r\n\r\nexport type MapStateType = {\r\n    users: UsersArrType[]\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: number[]\r\n\r\n}\r\n\r\nexport type MapDispatchType = {\r\n    setUsers: (users: UsersArrType[]) => void\r\n    setCurrentPage: (p: number) => void\r\n    setTotalUsersCount: (totalCount: number) => void\r\n    toggleIsFetching: (isFetching: boolean) => void\r\n    getUsersThunk: (currentPage: number, pageSize: number) => void\r\n    followThunk: (userId: number) => void\r\n    unFollowThunk: (userId: number) => void\r\n}\r\n\r\ntype UsersPropsType = MapStateType & MapDispatchType\r\n\r\nexport class UsersContainer extends React.Component<UsersPropsType> {\r\n\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props\r\n        this.props.getUsersThunk(currentPage, pageSize)\r\n\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.getUsersThunk(pageNumber, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                {this.props.isFetching &&\r\n                    <Preloader/>}\r\n                <Users onPageChanged={this.onPageChanged} totalUsersCount={this.props.totalUsersCount}\r\n                       pageSize={this.props.pageSize} currentPage={this.props.currentPage}\r\n                       users={this.props.users}\r\n                       followThunk={this.props.followThunk} unFollowThunk={this.props.unFollowThunk}\r\n                       followingInProgress={this.props.followingInProgress}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: AppReduxStateType): MapStateType => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\nconst mapDispatchToProps: MapDispatchType = {\r\n    setUsers: SetUsersAC,\r\n    setCurrentPage: SetCurrentPageAC,\r\n    setTotalUsersCount: SetTotalUsersCountAC,\r\n    toggleIsFetching: SetFetchingAC,\r\n    getUsersThunk: getUsersThunkCreator,\r\n    followThunk: followThunkCreator,\r\n    unFollowThunk: unFollowThunkCreator\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(UsersContainer) as React.ComponentType\r\n"],"names":["Paginator","props","onPageChanged","totalItemsCount","pageSize","currentPage","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPageNumber","rightPageNumber","min","prevDisabled","nextDisabled","onClick","disabled","filter","p","map","className","s","User","user","followThunk","unFollowThunk","followingInProgress","to","id","alt","src","photos","small","defaultPhoto","followed","some","name","city","Users","totalUsersCount","users","u","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","Object","assign","lastResult","recomputations","resetRecomputations","getUsers","state","usersPage","usersArr","getPageSize","getCurrentPage","getTotalUsersCount","getFollowingInProgress","getIsFetching","isFetching","UsersContainer","pageNumber","getUsersThunk","this","Preloader","React","mapDispatchToProps","setUsers","SetUsersAC","setCurrentPage","SetCurrentPageAC","setTotalUsersCount","SetTotalUsersCountAC","toggleIsFetching","SetFetchingAC","getUsersThunkCreator","followThunkCreator","unFollowThunkCreator","compose","connect","withAuthRedirect"],"sourceRoot":""}